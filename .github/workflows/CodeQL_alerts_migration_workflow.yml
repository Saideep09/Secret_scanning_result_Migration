name: Migrate Code Scanning Alerts

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  Downloading_from_source:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq (if not available)
        run: sudo apt-get install -y jq

      - name: Create SARIF directory
        run: mkdir -p sarif_reports

      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y
        env:
          GH_TOKEN: ${{ secrets.SOURCE_TOKEN }} 
      
      - name: List and download SARIF files from the source repository
        env:
          GH_TOKEN: ${{ secrets.SOURCE_TOKEN }}
        run: |
          gh api -X GET /repos/Saideep09/zxing-sample-java/code-scanning/alerts

      - name: Download and validate SARIF files from Code Scanning Alerts
        env:
          GH_TOKEN: ${{ secrets.SOURCE_TOKEN }}
        run: |
          # Fetch list of analysis IDs
          analysis_ids=$(gh api -X GET "/repos/Saideep09/zxing-sample-java/code-scanning/analyses" --jq '.[].id')

          # Download each SARIF file by analysis ID and validate
          for analysis_id in $analysis_ids; do
            echo "Fetching SARIF for analysis ID: $analysis_id"
            
            # Save the SARIF JSON content
            sarif_data=$(gh api -X GET "/repos/Saideep09/zxing-sample-java/code-scanning/analyses/$analysis_id" | jq '.sarif')
            
            # Check if SARIF data is not empty
            if [ "$sarif_data" != "null" ]; then
              echo "$sarif_data" > "sarif_reports/analysis_${analysis_id}.sarif"
              echo "SARIF file saved for analysis ID: $analysis_id"
            else
              echo "No SARIF data found for analysis ID: $analysis_id"
            fi
          done

      - name: Upload SARIF files as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sarif-reports
          path: sarif_reports/
