name: Migrate Repository-Level Secret scanning results remediation state

on:
  issues:
    types: [opened,edited]

jobs:
  migrate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Set up PowerShell
      uses: actions/setup-python@v4

    - name: Validate PAT tokens
      run: |
        if [[ -z "${{ secrets.SOURCE_TOEKN }}" ]]; then
          echo "Source Token token is missing!"
          exit 1
        fi
        if [[ -z "${{ secrets.TARGET_TOKEN }}" ]]; then
          echo "Target Token token is missing!"
          exit 1
        fi
      shell: bash

    - name: Extract source and target organization and repository from issue
      id: extract_repos
      run: |
        echo "::set-output name=sourceOrg::$(echo '${{ github.event.issue.body }}' | grep 'Source Organization' | sed 's/Source Organization.*: //')"
        echo "::set-output name=sourceRepo::$(echo '${{ github.event.issue.body }}' | grep 'Source Repository' | sed 's/Source Repository.*: //')"
        echo "::set-output name=targetOrg::$(echo '${{ github.event.issue.body }}' | grep 'Target Organization' | sed 's/Target Organization.*: //')"
        echo "::set-output name=targetRepo::$(echo '${{ github.event.issue.body }}' | grep 'Target Repository' | sed 's/Target Repository.*: //')"

    - name: Print inputs
      run: |
        echo "Source Organization: ${{ steps.extract_repos.outputs.sourceOrg }}"
        echo "Source Repository: ${{ steps.extract_repos.outputs.sourceRepo }}"
        echo "Target Organization: ${{ steps.extract_repos.outputs.targetOrg }}"
        echo "Target Repository: ${{ steps.extract_repos.outputs.targetRepo }}"

    - name: Run the PowerShell migration script
      run: |
        pwsh ./scripts/migrate_secret_states.ps1 -sourceRepo "${{ steps.extract_repos.outputs.sourceOrg }}/${{ steps.extract_repos.outputs.sourceRepo }}" -targetRepo "${{ steps.extract_repos.outputs.targetOrg }}/${{ steps.extract_repos.outputs.targetRepo }}"
      env:
        SOURCE_PAT: ${{ secrets.SOURCE_PAT }}
        TARGET_PAT: ${{ secrets.TARGET_PAT }}

 # migration:
 #   runs-on: ubuntu-latest
 #   permissions:
 #     contents: read
 #     issues: write

#    steps:
#      - name: Get Issue Body
#       id: issue_body
 #       uses: actions/github-script@v6
 #       with:
 #         script: |
 #           const issueBody = context.payload.issue.body;
  #          console.log("Issue Body: ", issueBody);
#
#           // Use regex to extract organization names
#            const sourceOrgMatch = issueBody.match(/### Source Organization\s*\n*(.*)/);
#           const sourceRepoMatch = issueBody.match(/### Source Repository\s*\n*(.*)/); // Repo-level
#            const targetOrgMatch = issueBody.match(/### Target Organization\s*\n*(.*)/);
#            const targetRepoMatch = issueBody.match(/### Target Repository\s*\n*(.*)/); // Repo-level

#            const sourceOrg = sourceOrgMatch ? sourceOrgMatch[1].trim() : "Not provided";
#            const sourceRepo = sourceRepoMatch ? sourceRepoMatch[1].trim() : "Not provided";
#            const targetOrg = targetOrgMatch ? targetOrgMatch[1].trim() : "Not provided";
#            const targetRepo = targetRepoMatch ? targetRepoMatch[1].trim() : "Not provided";

#            console.log("Source Organization: ", sourceOrg);
#            console.log("Source Repository: ", sourceRepo);
#            console.log("Target Organization: ", targetOrg);
#            console.log("Target Repository: ", targetRepo);

#            core.setOutput("source_org", sourceOrg);
#            core.setOutput("source_repo", sourceRepo);
#            core.setOutput("target_org", targetOrg);
#            core.setOutput("target_repo", targetRepo);

#      - name: Print Variables
#        run: |
#          echo "Source Organization: ${{ steps.issue_body.outputs.source_org }}"
#          echo "Source Repository: ${{ steps.issue_body.outputs.source_repo }}"
#          echo "Target Organization: ${{ steps.issue_body.outputs.target_org }}"
#          echo "Target Repository: ${{ steps.issue_body.outputs.target_repo }}"

      
